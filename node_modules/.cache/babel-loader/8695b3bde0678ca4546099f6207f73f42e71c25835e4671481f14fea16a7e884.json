{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import useAuthStore from'../../store/useAuthStore';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{isAuthenticated}=useAuthStore();const location=useLocation();if(!isAuthenticated){// Save the location they were trying to access\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location.pathname},replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuthStore","jsx","_jsx","ProtectedRoute","_ref","children","isAuthenticated","location","to","state","from","pathname","replace"],"sources":["F:/projects/e-com/frontend/src/components/common/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport useAuthStore from '../../store/useAuthStore';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { isAuthenticated } = useAuthStore();\r\n  const location = useLocation();\r\n\r\n  if (!isAuthenticated) {\r\n    // Save the location they were trying to access\r\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,MAAO,CAAAC,YAAY,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,eAAgB,CAAC,CAAGN,YAAY,CAAC,CAAC,CAC1C,KAAM,CAAAO,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9B,GAAI,CAACO,eAAe,CAAE,CACpB;AACA,mBAAOJ,IAAA,CAACJ,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEH,QAAQ,CAACI,QAAS,CAAE,CAACC,OAAO,MAAE,CAAC,CAC7E,CAEA,MAAO,CAAAP,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}