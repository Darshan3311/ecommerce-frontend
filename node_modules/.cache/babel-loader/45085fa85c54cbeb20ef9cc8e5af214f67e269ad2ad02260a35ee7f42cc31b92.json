{"ast":null,"code":"import { create } from 'zustand';\nimport CartService from '../services/cart.service';\nimport useAuthStore from './useAuthStore';\nconst useCartStore = create((set, get) => ({\n  items: [],\n  subtotal: 0,\n  tax: 0,\n  total: 0,\n  isLoading: false,\n  // Calculate totals\n  calculateTotals: () => {\n    const items = get().items;\n    const subtotal = items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    const tax = subtotal * 0.08; // 8% tax\n    const total = subtotal + tax;\n    set({\n      subtotal,\n      tax,\n      total\n    });\n  },\n  // Set cart\n  setCart: cart => {\n    const items = cart.items || [];\n    const subtotal = cart.subtotal || items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    const tax = cart.tax || subtotal * 0.08;\n    const total = cart.total || subtotal + tax;\n    set({\n      items,\n      subtotal,\n      tax,\n      total\n    });\n  },\n  // Fetch cart from server\n  fetchCart: async () => {\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\n    if (!isAuthenticated) {\n      const localCart = CartService.getLocalCart();\n      console.log('Loading local cart:', localCart);\n      get().setCart(localCart);\n      return;\n    }\n    set({\n      isLoading: true\n    });\n    try {\n      const cart = await CartService.getCart();\n      console.log('Fetched cart from server:', cart);\n      get().setCart(cart);\n      set({\n        isLoading: false\n      });\n    } catch (error) {\n      var _error$response;\n      set({\n        isLoading: false\n      });\n      console.error('Failed to fetch cart:', error);\n      console.error('Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n  },\n  // Add to cart\n  addToCart: async (product, quantity = 1) => {\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\n    if (!isAuthenticated) {\n      const cart = CartService.addToLocalCart(product, quantity);\n      get().setCart(cart);\n      return;\n    }\n    set({\n      isLoading: true\n    });\n    try {\n      const cart = await CartService.addToCart(product._id, quantity);\n      get().setCart(cart);\n      set({\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Update cart item\n  updateCartItem: async (productId, quantity) => {\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\n    if (!isAuthenticated) {\n      // Handle local cart update\n      const cart = CartService.getLocalCart();\n      const itemIndex = cart.items.findIndex(item => item.productId === productId);\n      if (itemIndex > -1) {\n        cart.items[itemIndex].quantity = quantity;\n        CartService.saveLocalCart(cart);\n        get().setCart(cart);\n      }\n      return;\n    }\n    set({\n      isLoading: true\n    });\n    try {\n      const cart = await CartService.updateCartItem(productId, quantity);\n      get().setCart(cart);\n      set({\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Remove from cart\n  removeFromCart: async productId => {\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\n    if (!isAuthenticated) {\n      const cart = CartService.removeFromLocalCart(productId);\n      get().setCart(cart);\n      return;\n    }\n    set({\n      isLoading: true\n    });\n    try {\n      const cart = await CartService.removeFromCart(productId);\n      get().setCart(cart);\n      set({\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Clear cart\n  clearCart: async () => {\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\n    if (!isAuthenticated) {\n      CartService.clearLocalCart();\n      set({\n        items: [],\n        subtotal: 0,\n        tax: 0,\n        total: 0\n      });\n      return;\n    }\n    set({\n      isLoading: true\n    });\n    try {\n      await CartService.clearCart();\n      set({\n        items: [],\n        subtotal: 0,\n        tax: 0,\n        total: 0,\n        isLoading: false\n      });\n    } catch (error) {\n      set({\n        isLoading: false\n      });\n      throw error;\n    }\n  },\n  // Sync cart after login\n  syncCart: async () => {\n    const localCart = CartService.getLocalCart();\n    if (localCart.items.length > 0) {\n      try {\n        const cart = await CartService.syncCart(localCart.items);\n        get().setCart(cart);\n        CartService.clearLocalCart();\n      } catch (error) {\n        console.error('Failed to sync cart:', error);\n      }\n    } else {\n      await get().fetchCart();\n    }\n  },\n  // Get item count\n  getItemCount: () => {\n    return get().items.reduce((sum, item) => sum + item.quantity, 0);\n  }\n}));\nexport default useCartStore;","map":{"version":3,"names":["create","CartService","useAuthStore","useCartStore","set","get","items","subtotal","tax","total","isLoading","calculateTotals","reduce","sum","item","price","quantity","setCart","cart","fetchCart","isAuthenticated","getState","localCart","getLocalCart","console","log","getCart","error","_error$response","response","data","addToCart","product","addToLocalCart","_id","updateCartItem","productId","itemIndex","findIndex","saveLocalCart","removeFromCart","removeFromLocalCart","clearCart","clearLocalCart","syncCart","length","getItemCount"],"sources":["F:/projects/e-com/frontend/src/store/useCartStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport CartService from '../services/cart.service';\r\nimport useAuthStore from './useAuthStore';\r\n\r\nconst useCartStore = create((set, get) => ({\r\n  items: [],\r\n  subtotal: 0,\r\n  tax: 0,\r\n  total: 0,\r\n  isLoading: false,\r\n\r\n  // Calculate totals\r\n  calculateTotals: () => {\r\n    const items = get().items;\r\n    const subtotal = items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    const tax = subtotal * 0.08; // 8% tax\r\n    const total = subtotal + tax;\r\n    set({ subtotal, tax, total });\r\n  },\r\n\r\n  // Set cart\r\n  setCart: (cart) => {\r\n    const items = cart.items || [];\r\n    const subtotal = cart.subtotal || items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    const tax = cart.tax || subtotal * 0.08;\r\n    const total = cart.total || subtotal + tax;\r\n    \r\n    set({\r\n      items,\r\n      subtotal,\r\n      tax,\r\n      total\r\n    });\r\n  },\r\n\r\n  // Fetch cart from server\r\n  fetchCart: async () => {\r\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\r\n    if (!isAuthenticated) {\r\n      const localCart = CartService.getLocalCart();\r\n      console.log('Loading local cart:', localCart);\r\n      get().setCart(localCart);\r\n      return;\r\n    }\r\n\r\n    set({ isLoading: true });\r\n    try {\r\n      const cart = await CartService.getCart();\r\n      console.log('Fetched cart from server:', cart);\r\n      get().setCart(cart);\r\n      set({ isLoading: false });\r\n    } catch (error) {\r\n      set({ isLoading: false });\r\n      console.error('Failed to fetch cart:', error);\r\n      console.error('Error details:', error.response?.data);\r\n    }\r\n  },\r\n\r\n  // Add to cart\r\n  addToCart: async (product, quantity = 1) => {\r\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\r\n\r\n    if (!isAuthenticated) {\r\n      const cart = CartService.addToLocalCart(product, quantity);\r\n      get().setCart(cart);\r\n      return;\r\n    }\r\n\r\n    set({ isLoading: true });\r\n    try {\r\n      const cart = await CartService.addToCart(product._id, quantity);\r\n      get().setCart(cart);\r\n      set({ isLoading: false });\r\n    } catch (error) {\r\n      set({ isLoading: false });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update cart item\r\n  updateCartItem: async (productId, quantity) => {\r\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\r\n\r\n    if (!isAuthenticated) {\r\n      // Handle local cart update\r\n      const cart = CartService.getLocalCart();\r\n      const itemIndex = cart.items.findIndex(item => item.productId === productId);\r\n      if (itemIndex > -1) {\r\n        cart.items[itemIndex].quantity = quantity;\r\n        CartService.saveLocalCart(cart);\r\n        get().setCart(cart);\r\n      }\r\n      return;\r\n    }\r\n\r\n    set({ isLoading: true });\r\n    try {\r\n      const cart = await CartService.updateCartItem(productId, quantity);\r\n      get().setCart(cart);\r\n      set({ isLoading: false });\r\n    } catch (error) {\r\n      set({ isLoading: false });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Remove from cart\r\n  removeFromCart: async (productId) => {\r\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\r\n\r\n    if (!isAuthenticated) {\r\n      const cart = CartService.removeFromLocalCart(productId);\r\n      get().setCart(cart);\r\n      return;\r\n    }\r\n\r\n    set({ isLoading: true });\r\n    try {\r\n      const cart = await CartService.removeFromCart(productId);\r\n      get().setCart(cart);\r\n      set({ isLoading: false });\r\n    } catch (error) {\r\n      set({ isLoading: false });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Clear cart\r\n  clearCart: async () => {\r\n    const isAuthenticated = useAuthStore.getState().isAuthenticated;\r\n\r\n    if (!isAuthenticated) {\r\n      CartService.clearLocalCart();\r\n      set({ items: [], subtotal: 0, tax: 0, total: 0 });\r\n      return;\r\n    }\r\n\r\n    set({ isLoading: true });\r\n    try {\r\n      await CartService.clearCart();\r\n      set({ items: [], subtotal: 0, tax: 0, total: 0, isLoading: false });\r\n    } catch (error) {\r\n      set({ isLoading: false });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Sync cart after login\r\n  syncCart: async () => {\r\n    const localCart = CartService.getLocalCart();\r\n    if (localCart.items.length > 0) {\r\n      try {\r\n        const cart = await CartService.syncCart(localCart.items);\r\n        get().setCart(cart);\r\n        CartService.clearLocalCart();\r\n      } catch (error) {\r\n        console.error('Failed to sync cart:', error);\r\n      }\r\n    } else {\r\n      await get().fetchCart();\r\n    }\r\n  },\r\n\r\n  // Get item count\r\n  getItemCount: () => {\r\n    return get().items.reduce((sum, item) => sum + item.quantity, 0);\r\n  }\r\n}));\r\n\r\nexport default useCartStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}