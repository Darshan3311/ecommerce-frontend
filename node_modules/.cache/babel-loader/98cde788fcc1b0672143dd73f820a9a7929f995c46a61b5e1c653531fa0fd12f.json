{"ast":null,"code":"import api from '../utils/api';\nclass CartService {\n  // Get cart\n  async getCart() {\n    const response = await api.get('/cart');\n    return response.data.cart;\n  }\n\n  // Add to cart\n  async addToCart(productListingId, quantity = 1) {\n    const response = await api.post('/cart/add', {\n      productListingId,\n      quantity\n    });\n    return response.data.cart;\n  }\n\n  // Update cart item\n  async updateCartItem(productListingId, quantity) {\n    const response = await api.put(`/cart/${productListingId}`, {\n      quantity\n    });\n    return response.data.cart;\n  }\n\n  // Remove from cart\n  async removeFromCart(productListingId) {\n    const response = await api.delete(`/cart/${productListingId}`);\n    return response.data.cart;\n  }\n\n  // Clear cart\n  async clearCart() {\n    const response = await api.delete('/cart');\n    return response.data.cart;\n  }\n\n  // Sync cart\n  async syncCart(items) {\n    const response = await api.post('/cart/sync', {\n      items\n    });\n    return response.data.cart;\n  }\n\n  // Local cart management (for non-logged-in users)\n  getLocalCart() {\n    const cartStr = localStorage.getItem('cart');\n    return cartStr ? JSON.parse(cartStr) : {\n      items: [],\n      total: 0\n    };\n  }\n  saveLocalCart(cart) {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n  addToLocalCart(product, quantity = 1) {\n    const cart = this.getLocalCart();\n    const existingItemIndex = cart.items.findIndex(item => item.productListingId === product._id);\n    if (existingItemIndex > -1) {\n      cart.items[existingItemIndex].quantity += quantity;\n    } else {\n      cart.items.push({\n        productListingId: product._id,\n        product: product,\n        quantity: quantity,\n        price: product.price\n      });\n    }\n    cart.total = cart.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    this.saveLocalCart(cart);\n    return cart;\n  }\n  removeFromLocalCart(productListingId) {\n    const cart = this.getLocalCart();\n    cart.items = cart.items.filter(item => item.productListingId !== productListingId);\n    cart.total = cart.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    this.saveLocalCart(cart);\n    return cart;\n  }\n  clearLocalCart() {\n    localStorage.removeItem('cart');\n  }\n}\nconst cartServiceInstance = new CartService();\nexport default cartServiceInstance;","map":{"version":3,"names":["api","CartService","getCart","response","get","data","cart","addToCart","productListingId","quantity","post","updateCartItem","put","removeFromCart","delete","clearCart","syncCart","items","getLocalCart","cartStr","localStorage","getItem","JSON","parse","total","saveLocalCart","setItem","stringify","addToLocalCart","product","existingItemIndex","findIndex","item","_id","push","price","reduce","sum","removeFromLocalCart","filter","clearLocalCart","removeItem","cartServiceInstance"],"sources":["F:/projects/e-com/frontend/src/services/cart.service.js"],"sourcesContent":["import api from '../utils/api';\r\n\r\nclass CartService {\r\n  // Get cart\r\n  async getCart() {\r\n    const response = await api.get('/cart');\r\n    return response.data.cart;\r\n  }\r\n\r\n  // Add to cart\r\n  async addToCart(productListingId, quantity = 1) {\r\n    const response = await api.post('/cart/add', { productListingId, quantity });\r\n    return response.data.cart;\r\n  }\r\n\r\n  // Update cart item\r\n  async updateCartItem(productListingId, quantity) {\r\n    const response = await api.put(`/cart/${productListingId}`, { quantity });\r\n    return response.data.cart;\r\n  }\r\n\r\n  // Remove from cart\r\n  async removeFromCart(productListingId) {\r\n    const response = await api.delete(`/cart/${productListingId}`);\r\n    return response.data.cart;\r\n  }\r\n\r\n  // Clear cart\r\n  async clearCart() {\r\n    const response = await api.delete('/cart');\r\n    return response.data.cart;\r\n  }\r\n\r\n  // Sync cart\r\n  async syncCart(items) {\r\n    const response = await api.post('/cart/sync', { items });\r\n    return response.data.cart;\r\n  }\r\n\r\n  // Local cart management (for non-logged-in users)\r\n  getLocalCart() {\r\n    const cartStr = localStorage.getItem('cart');\r\n    return cartStr ? JSON.parse(cartStr) : { items: [], total: 0 };\r\n  }\r\n\r\n  saveLocalCart(cart) {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }\r\n\r\n  addToLocalCart(product, quantity = 1) {\r\n    const cart = this.getLocalCart();\r\n    const existingItemIndex = cart.items.findIndex(item => item.productListingId === product._id);\r\n\r\n    if (existingItemIndex > -1) {\r\n      cart.items[existingItemIndex].quantity += quantity;\r\n    } else {\r\n      cart.items.push({\r\n        productListingId: product._id,\r\n        product: product,\r\n        quantity: quantity,\r\n        price: product.price\r\n      });\r\n    }\r\n\r\n    cart.total = cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    this.saveLocalCart(cart);\r\n    return cart;\r\n  }\r\n\r\n  removeFromLocalCart(productListingId) {\r\n    const cart = this.getLocalCart();\r\n    cart.items = cart.items.filter(item => item.productListingId !== productListingId);\r\n    cart.total = cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    this.saveLocalCart(cart);\r\n    return cart;\r\n  }\r\n\r\n  clearLocalCart() {\r\n    localStorage.removeItem('cart');\r\n  }\r\n}\r\n\r\nconst cartServiceInstance = new CartService();\r\nexport default cartServiceInstance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}