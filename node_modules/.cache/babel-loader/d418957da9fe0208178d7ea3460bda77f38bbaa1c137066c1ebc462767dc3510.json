{"ast":null,"code":"import api from '../utils/api';\nclass AuthService {\n  // Register\n  async register(userData) {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  }\n\n  // Login\n  async login(credentials) {\n    const response = await api.post('/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  }\n\n  // Logout\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart');\n  }\n\n  // Get current user\n  async getCurrentUser() {\n    const response = await api.get('/auth/me');\n    return response.data.user;\n  }\n\n  // Verify email\n  async verifyEmail(token) {\n    const response = await api.get(`/auth/verify-email?token=${token}`);\n    return response.data;\n  }\n\n  // Resend verification email\n  async resendVerificationEmail(email) {\n    const response = await api.post('/auth/resend-verification', {\n      email\n    });\n    return response.data;\n  }\n\n  // Forgot password\n  async forgotPassword(email) {\n    const response = await api.post('/auth/forgot-password', {\n      email\n    });\n    return response.data;\n  }\n\n  // Reset password\n  async resetPassword(token, password) {\n    const response = await api.post(`/auth/reset-password?token=${token}`, {\n      password\n    });\n    return response.data;\n  }\n\n  // Get stored user\n  getStoredUser() {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  }\n\n  // Get stored token\n  getStoredToken() {\n    return localStorage.getItem('token');\n  }\n\n  // Check if logged in\n  isLoggedIn() {\n    return !!this.getStoredToken();\n  }\n}\nconst authServiceInstance = new AuthService();\nexport default authServiceInstance;","map":{"version":3,"names":["api","AuthService","register","userData","response","post","data","login","credentials","token","localStorage","setItem","JSON","stringify","user","logout","removeItem","getCurrentUser","get","verifyEmail","resendVerificationEmail","email","forgotPassword","resetPassword","password","getStoredUser","userStr","getItem","parse","getStoredToken","isLoggedIn","authServiceInstance"],"sources":["F:/projects/e-com/frontend/src/services/auth.service.js"],"sourcesContent":["import api from '../utils/api';\r\n\r\nclass AuthService {\r\n  // Register\r\n  async register(userData) {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  }\r\n\r\n  // Login\r\n  async login(credentials) {\r\n    const response = await api.post('/auth/login', credentials);\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  // Logout\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('cart');\r\n  }\r\n\r\n  // Get current user\r\n  async getCurrentUser() {\r\n    const response = await api.get('/auth/me');\r\n    return response.data.user;\r\n  }\r\n\r\n  // Verify email\r\n  async verifyEmail(token) {\r\n    const response = await api.get(`/auth/verify-email?token=${token}`);\r\n    return response.data;\r\n  }\r\n\r\n  // Resend verification email\r\n  async resendVerificationEmail(email) {\r\n    const response = await api.post('/auth/resend-verification', { email });\r\n    return response.data;\r\n  }\r\n\r\n  // Forgot password\r\n  async forgotPassword(email) {\r\n    const response = await api.post('/auth/forgot-password', { email });\r\n    return response.data;\r\n  }\r\n\r\n  // Reset password\r\n  async resetPassword(token, password) {\r\n    const response = await api.post(`/auth/reset-password?token=${token}`, { password });\r\n    return response.data;\r\n  }\r\n\r\n  // Get stored user\r\n  getStoredUser() {\r\n    const userStr = localStorage.getItem('user');\r\n    return userStr ? JSON.parse(userStr) : null;\r\n  }\r\n\r\n  // Get stored token\r\n  getStoredToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  // Check if logged in\r\n  isLoggedIn() {\r\n    return !!this.getStoredToken();\r\n  }\r\n}\r\n\r\nconst authServiceInstance = new AuthService();\r\nexport default authServiceInstance;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAE9B,MAAMC,WAAW,CAAC;EAChB;EACA,MAAMC,QAAQA,CAACC,QAAQ,EAAE;IACvB,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;IAC3D,OAAOC,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMC,KAAKA,CAACC,WAAW,EAAE;IACvB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEG,WAAW,CAAC;IAC3D,IAAIJ,QAAQ,CAACE,IAAI,CAACG,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACE,IAAI,CAACG,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAACE,IAAI,CAACQ,IAAI,CAAC,CAAC;IAClE;IACA,OAAOV,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACAS,MAAMA,CAAA,EAAG;IACPL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAC/BN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EACjC;;EAEA;EACA,MAAMC,cAAcA,CAAA,EAAG;IACrB,MAAMb,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOd,QAAQ,CAACE,IAAI,CAACQ,IAAI;EAC3B;;EAEA;EACA,MAAMK,WAAWA,CAACV,KAAK,EAAE;IACvB,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAC,4BAA4BT,KAAK,EAAE,CAAC;IACnE,OAAOL,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMc,uBAAuBA,CAACC,KAAK,EAAE;IACnC,MAAMjB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,2BAA2B,EAAE;MAAEgB;IAAM,CAAC,CAAC;IACvE,OAAOjB,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMgB,cAAcA,CAACD,KAAK,EAAE;IAC1B,MAAMjB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,uBAAuB,EAAE;MAAEgB;IAAM,CAAC,CAAC;IACnE,OAAOjB,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMiB,aAAaA,CAACd,KAAK,EAAEe,QAAQ,EAAE;IACnC,MAAMpB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,8BAA8BI,KAAK,EAAE,EAAE;MAAEe;IAAS,CAAC,CAAC;IACpF,OAAOpB,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACAmB,aAAaA,CAAA,EAAG;IACd,MAAMC,OAAO,GAAGhB,YAAY,CAACiB,OAAO,CAAC,MAAM,CAAC;IAC5C,OAAOD,OAAO,GAAGd,IAAI,CAACgB,KAAK,CAACF,OAAO,CAAC,GAAG,IAAI;EAC7C;;EAEA;EACAG,cAAcA,CAAA,EAAG;IACf,OAAOnB,YAAY,CAACiB,OAAO,CAAC,OAAO,CAAC;EACtC;;EAEA;EACAG,UAAUA,CAAA,EAAG;IACX,OAAO,CAAC,CAAC,IAAI,CAACD,cAAc,CAAC,CAAC;EAChC;AACF;AAEA,MAAME,mBAAmB,GAAG,IAAI9B,WAAW,CAAC,CAAC;AAC7C,eAAe8B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}