{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport wishlistService from '../services/wishlist.service';\nimport { toast } from 'react-hot-toast';\nconst useWishlistStore = create(persist((set, get) => ({\n  wishlist: null,\n  loading: false,\n  processing: false,\n  // Fetch wishlist\n  fetchWishlist: async () => {\n    try {\n      set({\n        loading: true\n      });\n      const response = await wishlistService.getWishlist();\n      set({\n        wishlist: response.data,\n        loading: false\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error('Fetch wishlist error:', error);\n      set({\n        loading: false,\n        wishlist: null\n      });\n      // Don't show error toast for unauthenticated users\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 401) {\n        toast.error('Failed to load wishlist');\n      }\n      throw error;\n    }\n  },\n  // Add to wishlist\n  addToWishlist: async productId => {\n    try {\n      const response = await wishlistService.addToWishlist(productId);\n      set({\n        wishlist: response.data\n      });\n      toast.success('Added to wishlist');\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response4, _error$response4$data;\n      console.error('Add to wishlist error:', error);\n      console.error('Error response:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error('Error status:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status);\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to add to wishlist';\n      toast.error(message);\n      throw error;\n    }\n  },\n  // Remove from wishlist\n  removeFromWishlist: async productId => {\n    try {\n      const response = await wishlistService.removeFromWishlist(productId);\n      set({\n        wishlist: response.data\n      });\n      toast.success('Removed from wishlist');\n      return response.data;\n    } catch (error) {\n      console.error('Remove from wishlist error:', error);\n      toast.error('Failed to remove from wishlist');\n      throw error;\n    }\n  },\n  // Toggle wishlist (add or remove) - SIMPLIFIED VERSION\n  toggleWishlist: async productId => {\n    const {\n      processing\n    } = get();\n\n    // Prevent multiple simultaneous toggles\n    if (processing) {\n      return;\n    }\n    set({\n      processing: true\n    });\n    try {\n      var _freshWishlist$items;\n      // Always fetch fresh data first\n      const freshWishlist = await get().fetchWishlist();\n\n      // Check if product is in the fresh wishlist data\n      const isInWishlist = freshWishlist === null || freshWishlist === void 0 ? void 0 : (_freshWishlist$items = freshWishlist.items) === null || _freshWishlist$items === void 0 ? void 0 : _freshWishlist$items.some(item => {\n        var _item$product;\n        const itemId = typeof item.product === 'string' ? item.product : (_item$product = item.product) === null || _item$product === void 0 ? void 0 : _item$product._id;\n        return itemId === productId;\n      });\n\n      // Toggle based on current state\n      if (isInWishlist) {\n        await get().removeFromWishlist(productId);\n      } else {\n        await get().addToWishlist(productId);\n      }\n    } catch (error) {\n      var _error$response5;\n      // If fetch failed (401), user is not authenticated\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n        toast.error('Please login to use wishlist');\n        return;\n      }\n\n      // Handle other errors silently (already shown in add/remove)\n      console.error('Toggle error:', error);\n    } finally {\n      set({\n        processing: false\n      });\n    }\n  },\n  // Check if product is in wishlist\n  isInWishlist: productId => {\n    const {\n      wishlist\n    } = get();\n    if (!wishlist || !wishlist.items) return false;\n    return wishlist.items.some(item => {\n      var _item$product2;\n      const itemId = typeof item.product === 'string' ? item.product : (_item$product2 = item.product) === null || _item$product2 === void 0 ? void 0 : _item$product2._id;\n      return itemId === productId;\n    });\n  },\n  // Get wishlist item count\n  getWishlistCount: () => {\n    var _wishlist$items;\n    const {\n      wishlist\n    } = get();\n    return (wishlist === null || wishlist === void 0 ? void 0 : (_wishlist$items = wishlist.items) === null || _wishlist$items === void 0 ? void 0 : _wishlist$items.length) || 0;\n  },\n  // Clear wishlist\n  clearWishlist: async () => {\n    try {\n      await wishlistService.clearWishlist();\n      set({\n        wishlist: {\n          items: []\n        }\n      });\n      toast.success('Wishlist cleared');\n    } catch (error) {\n      console.error('Clear wishlist error:', error);\n      toast.error('Failed to clear wishlist');\n      throw error;\n    }\n  },\n  // Move to cart\n  moveToCart: async productId => {\n    try {\n      const response = await wishlistService.moveToCart(productId);\n      set({\n        wishlist: response.data.wishlist\n      });\n      toast.success('Moved to cart');\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('Move to cart error:', error);\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to move to cart';\n      toast.error(message);\n      throw error;\n    }\n  },\n  // Reset wishlist (on logout)\n  resetWishlist: () => {\n    set({\n      wishlist: null,\n      loading: false,\n      processing: false\n    });\n  }\n}), {\n  name: 'wishlist-storage',\n  partialize: state => ({\n    // Don't persist the wishlist data, only fetch from API\n    // This prevents stale data issues\n  })\n}));\nexport default useWishlistStore;","map":{"version":3,"names":["create","persist","wishlistService","toast","useWishlistStore","set","get","wishlist","loading","processing","fetchWishlist","response","getWishlist","data","error","_error$response","console","status","addToWishlist","productId","success","_error$response2","_error$response3","_error$response4","_error$response4$data","message","removeFromWishlist","toggleWishlist","_freshWishlist$items","freshWishlist","isInWishlist","items","some","item","_item$product","itemId","product","_id","_error$response5","_item$product2","getWishlistCount","_wishlist$items","length","clearWishlist","moveToCart","_error$response6","_error$response6$data","resetWishlist","name","partialize","state"],"sources":["F:/projects/e-com/frontend/src/store/useWishlistStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport wishlistService from '../services/wishlist.service';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst useWishlistStore = create(\r\n  persist(\r\n    (set, get) => ({\r\n      wishlist: null,\r\n      loading: false,\r\n      processing: false,\r\n\r\n      // Fetch wishlist\r\n      fetchWishlist: async () => {\r\n        try {\r\n          set({ loading: true });\r\n          const response = await wishlistService.getWishlist();\r\n          set({ wishlist: response.data, loading: false });\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Fetch wishlist error:', error);\r\n          set({ loading: false, wishlist: null });\r\n          // Don't show error toast for unauthenticated users\r\n          if (error.response?.status !== 401) {\r\n            toast.error('Failed to load wishlist');\r\n          }\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Add to wishlist\r\n      addToWishlist: async (productId) => {\r\n        try {\r\n          const response = await wishlistService.addToWishlist(productId);\r\n          set({ wishlist: response.data });\r\n          toast.success('Added to wishlist');\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Add to wishlist error:', error);\r\n          console.error('Error response:', error.response?.data);\r\n          console.error('Error status:', error.response?.status);\r\n          const message = error.response?.data?.message || 'Failed to add to wishlist';\r\n          toast.error(message);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Remove from wishlist\r\n      removeFromWishlist: async (productId) => {\r\n        try {\r\n          const response = await wishlistService.removeFromWishlist(productId);\r\n          set({ wishlist: response.data });\r\n          toast.success('Removed from wishlist');\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Remove from wishlist error:', error);\r\n          toast.error('Failed to remove from wishlist');\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Toggle wishlist (add or remove) - SIMPLIFIED VERSION\r\n      toggleWishlist: async (productId) => {\r\n        const { processing } = get();\r\n        \r\n        // Prevent multiple simultaneous toggles\r\n        if (processing) {\r\n          return;\r\n        }\r\n\r\n        set({ processing: true });\r\n\r\n        try {\r\n          // Always fetch fresh data first\r\n          const freshWishlist = await get().fetchWishlist();\r\n          \r\n          // Check if product is in the fresh wishlist data\r\n          const isInWishlist = freshWishlist?.items?.some(item => {\r\n            const itemId = typeof item.product === 'string' ? item.product : item.product?._id;\r\n            return itemId === productId;\r\n          });\r\n\r\n          // Toggle based on current state\r\n          if (isInWishlist) {\r\n            await get().removeFromWishlist(productId);\r\n          } else {\r\n            await get().addToWishlist(productId);\r\n          }\r\n        } catch (error) {\r\n          // If fetch failed (401), user is not authenticated\r\n          if (error.response?.status === 401) {\r\n            toast.error('Please login to use wishlist');\r\n            return;\r\n          }\r\n          \r\n          // Handle other errors silently (already shown in add/remove)\r\n          console.error('Toggle error:', error);\r\n        } finally {\r\n          set({ processing: false });\r\n        }\r\n      },\r\n\r\n      // Check if product is in wishlist\r\n      isInWishlist: (productId) => {\r\n        const { wishlist } = get();\r\n        if (!wishlist || !wishlist.items) return false;\r\n        \r\n        return wishlist.items.some(item => {\r\n          const itemId = typeof item.product === 'string' ? item.product : item.product?._id;\r\n          return itemId === productId;\r\n        });\r\n      },\r\n\r\n      // Get wishlist item count\r\n      getWishlistCount: () => {\r\n        const { wishlist } = get();\r\n        return wishlist?.items?.length || 0;\r\n      },\r\n\r\n      // Clear wishlist\r\n      clearWishlist: async () => {\r\n        try {\r\n          await wishlistService.clearWishlist();\r\n          set({ wishlist: { items: [] } });\r\n          toast.success('Wishlist cleared');\r\n        } catch (error) {\r\n          console.error('Clear wishlist error:', error);\r\n          toast.error('Failed to clear wishlist');\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Move to cart\r\n      moveToCart: async (productId) => {\r\n        try {\r\n          const response = await wishlistService.moveToCart(productId);\r\n          set({ wishlist: response.data.wishlist });\r\n          toast.success('Moved to cart');\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Move to cart error:', error);\r\n          const message = error.response?.data?.message || 'Failed to move to cart';\r\n          toast.error(message);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Reset wishlist (on logout)\r\n      resetWishlist: () => {\r\n        set({ wishlist: null, loading: false, processing: false });\r\n      }\r\n    }),\r\n    {\r\n      name: 'wishlist-storage',\r\n      partialize: (state) => ({ \r\n        // Don't persist the wishlist data, only fetch from API\r\n        // This prevents stale data issues\r\n      })\r\n    }\r\n  )\r\n);\r\n\r\nexport default useWishlistStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}