{"ast":null,"code":"import _objectSpread from\"F:/projects/e-com/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{create}from'zustand';import AuthService from'../services/auth.service';const useAuthStore=create((set,get)=>({user:AuthService.getStoredUser(),token:AuthService.getStoredToken(),isAuthenticated:AuthService.isLoggedIn(),isLoading:false,error:null,// Set user\nsetUser:user=>set({user,isAuthenticated:true}),// Set token\nsetToken:token=>set({token}),// Login\nlogin:async credentials=>{set({isLoading:true,error:null});try{const data=await AuthService.login(credentials);set({user:data.user,token:data.token,isAuthenticated:true,isLoading:false});return data;}catch(error){set({error:error.message,isLoading:false});throw error;}},// Register\nregister:async userData=>{set({isLoading:true,error:null});try{const data=await AuthService.register(userData);set({isLoading:false});return data;}catch(error){set({error:error.message,isLoading:false});throw error;}},// Logout\nlogout:()=>{AuthService.logout();set({user:null,token:null,isAuthenticated:false,error:null});},// Update user\nupdateUser:userData=>{const updatedUser=_objectSpread(_objectSpread({},get().user),userData);localStorage.setItem('user',JSON.stringify(updatedUser));set({user:updatedUser});},// Clear error\nclearError:()=>set({error:null})}));export default useAuthStore;","map":{"version":3,"names":["create","AuthService","useAuthStore","set","get","user","getStoredUser","token","getStoredToken","isAuthenticated","isLoggedIn","isLoading","error","setUser","setToken","login","credentials","data","message","register","userData","logout","updateUser","updatedUser","_objectSpread","localStorage","setItem","JSON","stringify","clearError"],"sources":["F:/projects/e-com/frontend/src/store/useAuthStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst useAuthStore = create((set, get) => ({\r\n  user: AuthService.getStoredUser(),\r\n  token: AuthService.getStoredToken(),\r\n  isAuthenticated: AuthService.isLoggedIn(),\r\n  isLoading: false,\r\n  error: null,\r\n\r\n  // Set user\r\n  setUser: (user) => set({ user, isAuthenticated: true }),\r\n\r\n  // Set token\r\n  setToken: (token) => set({ token }),\r\n\r\n  // Login\r\n  login: async (credentials) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const data = await AuthService.login(credentials);\r\n      set({\r\n        user: data.user,\r\n        token: data.token,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Register\r\n  register: async (userData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const data = await AuthService.register(userData);\r\n      set({ isLoading: false });\r\n      return data;\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Logout\r\n  logout: () => {\r\n    AuthService.logout();\r\n    set({\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      error: null\r\n    });\r\n  },\r\n\r\n  // Update user\r\n  updateUser: (userData) => {\r\n    const updatedUser = { ...get().user, ...userData };\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    set({ user: updatedUser });\r\n  },\r\n\r\n  // Clear error\r\n  clearError: () => set({ error: null })\r\n}));\r\n\r\nexport default useAuthStore;\r\n"],"mappings":"+GAAA,OAASA,MAAM,KAAQ,SAAS,CAChC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAElD,KAAM,CAAAC,YAAY,CAAGF,MAAM,CAAC,CAACG,GAAG,CAAEC,GAAG,IAAM,CACzCC,IAAI,CAAEJ,WAAW,CAACK,aAAa,CAAC,CAAC,CACjCC,KAAK,CAAEN,WAAW,CAACO,cAAc,CAAC,CAAC,CACnCC,eAAe,CAAER,WAAW,CAACS,UAAU,CAAC,CAAC,CACzCC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IAAI,CAEX;AACAC,OAAO,CAAGR,IAAI,EAAKF,GAAG,CAAC,CAAEE,IAAI,CAAEI,eAAe,CAAE,IAAK,CAAC,CAAC,CAEvD;AACAK,QAAQ,CAAGP,KAAK,EAAKJ,GAAG,CAAC,CAAEI,KAAM,CAAC,CAAC,CAEnC;AACAQ,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5Bb,GAAG,CAAC,CAAEQ,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACrC,GAAI,CACF,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAhB,WAAW,CAACc,KAAK,CAACC,WAAW,CAAC,CACjDb,GAAG,CAAC,CACFE,IAAI,CAAEY,IAAI,CAACZ,IAAI,CACfE,KAAK,CAAEU,IAAI,CAACV,KAAK,CACjBE,eAAe,CAAE,IAAI,CACrBE,SAAS,CAAE,KACb,CAAC,CAAC,CACF,MAAO,CAAAM,IAAI,CACb,CAAE,MAAOL,KAAK,CAAE,CACdT,GAAG,CAAC,CAAES,KAAK,CAAEA,KAAK,CAACM,OAAO,CAAEP,SAAS,CAAE,KAAM,CAAC,CAAC,CAC/C,KAAM,CAAAC,KAAK,CACb,CACF,CAAC,CAED;AACAO,QAAQ,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC5BjB,GAAG,CAAC,CAAEQ,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACrC,GAAI,CACF,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAhB,WAAW,CAACkB,QAAQ,CAACC,QAAQ,CAAC,CACjDjB,GAAG,CAAC,CAAEQ,SAAS,CAAE,KAAM,CAAC,CAAC,CACzB,MAAO,CAAAM,IAAI,CACb,CAAE,MAAOL,KAAK,CAAE,CACdT,GAAG,CAAC,CAAES,KAAK,CAAEA,KAAK,CAACM,OAAO,CAAEP,SAAS,CAAE,KAAM,CAAC,CAAC,CAC/C,KAAM,CAAAC,KAAK,CACb,CACF,CAAC,CAED;AACAS,MAAM,CAAEA,CAAA,GAAM,CACZpB,WAAW,CAACoB,MAAM,CAAC,CAAC,CACpBlB,GAAG,CAAC,CACFE,IAAI,CAAE,IAAI,CACVE,KAAK,CAAE,IAAI,CACXE,eAAe,CAAE,KAAK,CACtBG,KAAK,CAAE,IACT,CAAC,CAAC,CACJ,CAAC,CAED;AACAU,UAAU,CAAGF,QAAQ,EAAK,CACxB,KAAM,CAAAG,WAAW,CAAAC,aAAA,CAAAA,aAAA,IAAQpB,GAAG,CAAC,CAAC,CAACC,IAAI,EAAKe,QAAQ,CAAE,CAClDK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC,CACzDpB,GAAG,CAAC,CAAEE,IAAI,CAAEkB,WAAY,CAAC,CAAC,CAC5B,CAAC,CAED;AACAM,UAAU,CAAEA,CAAA,GAAM1B,GAAG,CAAC,CAAES,KAAK,CAAE,IAAK,CAAC,CACvC,CAAC,CAAC,CAAC,CAEH,cAAe,CAAAV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}