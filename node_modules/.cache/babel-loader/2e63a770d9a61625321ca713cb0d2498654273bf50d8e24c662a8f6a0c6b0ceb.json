{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport wishlistService from '../services/wishlist.service';\nimport { toast } from 'react-hot-toast';\nconst useWishlistStore = create(persist((set, get) => ({\n  wishlist: null,\n  loading: false,\n  processing: false,\n  // Add processing state for toggle operations\n\n  // Fetch wishlist\n  fetchWishlist: async () => {\n    try {\n      set({\n        loading: true\n      });\n      const response = await wishlistService.getWishlist();\n      console.log('Fetched wishlist from API:', response.data);\n      set({\n        wishlist: response.data,\n        loading: false\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error('Fetch wishlist error:', error);\n      set({\n        loading: false\n      });\n      // Don't show error toast for unauthenticated users\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 401) {\n        toast.error('Failed to load wishlist');\n      }\n      throw error;\n    }\n  },\n  // Add to wishlist\n  addToWishlist: async productId => {\n    try {\n      console.log('Adding to wishlist, productId:', productId);\n      const response = await wishlistService.addToWishlist(productId);\n      console.log('Add to wishlist response:', response);\n\n      // Update state immediately with the response data\n      set({\n        wishlist: response.data\n      });\n      toast.success('Added to wishlist');\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response4, _error$response4$data;\n      console.error('Add to wishlist error:', error);\n      console.error('Error response:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error('Error status:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status);\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to add to wishlist';\n      toast.error(message);\n      throw error;\n    }\n  },\n  // Remove from wishlist\n  removeFromWishlist: async productId => {\n    try {\n      const response = await wishlistService.removeFromWishlist(productId);\n      set({\n        wishlist: response.data\n      });\n      toast.success('Removed from wishlist');\n      return response.data;\n    } catch (error) {\n      console.error('Remove from wishlist error:', error);\n      toast.error('Failed to remove from wishlist');\n      throw error;\n    }\n  },\n  // Toggle wishlist (add or remove)\n  toggleWishlist: async productId => {\n    // Prevent multiple simultaneous toggles\n    const {\n      processing\n    } = get();\n    if (processing) {\n      console.log('Already processing, ignoring click');\n      return;\n    }\n    set({\n      processing: true\n    });\n    try {\n      const {\n        wishlist\n      } = get();\n      console.log('Toggle wishlist for product:', productId);\n      console.log('Current wishlist state:', wishlist);\n      if (!wishlist || !wishlist.items) {\n        console.log('No wishlist, adding product');\n        await get().addToWishlist(productId);\n        return;\n      }\n      const isInWishlist = wishlist.items.some(item => {\n        var _item$product;\n        const itemProductId = typeof item.product === 'string' ? item.product : (_item$product = item.product) === null || _item$product === void 0 ? void 0 : _item$product._id;\n        console.log('Comparing:', itemProductId, 'with', productId, '=', itemProductId === productId);\n        return itemProductId === productId;\n      });\n      console.log('Is in wishlist?', isInWishlist);\n      if (isInWishlist) {\n        console.log('Removing from wishlist');\n        await get().removeFromWishlist(productId);\n      } else {\n        console.log('Adding to wishlist');\n        await get().addToWishlist(productId);\n      }\n    } finally {\n      set({\n        processing: false\n      });\n    }\n  },\n  // Check if product is in wishlist\n  isInWishlist: productId => {\n    const {\n      wishlist\n    } = get();\n    if (!wishlist || !wishlist.items) return false;\n    return wishlist.items.some(item => {\n      var _item$product2;\n      // Handle both populated and non-populated product\n      if (typeof item.product === 'string') {\n        return item.product === productId;\n      }\n      return ((_item$product2 = item.product) === null || _item$product2 === void 0 ? void 0 : _item$product2._id) === productId;\n    });\n  },\n  // Get wishlist item count\n  getWishlistCount: () => {\n    var _wishlist$items;\n    const {\n      wishlist\n    } = get();\n    return (wishlist === null || wishlist === void 0 ? void 0 : (_wishlist$items = wishlist.items) === null || _wishlist$items === void 0 ? void 0 : _wishlist$items.length) || 0;\n  },\n  // Clear wishlist\n  clearWishlist: async () => {\n    try {\n      await wishlistService.clearWishlist();\n      set({\n        wishlist: {\n          items: []\n        }\n      });\n      toast.success('Wishlist cleared');\n    } catch (error) {\n      console.error('Clear wishlist error:', error);\n      toast.error('Failed to clear wishlist');\n      throw error;\n    }\n  },\n  // Move to cart\n  moveToCart: async productId => {\n    try {\n      const response = await wishlistService.moveToCart(productId);\n      set({\n        wishlist: response.data.wishlist\n      });\n      toast.success('Moved to cart');\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Move to cart error:', error);\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to move to cart';\n      toast.error(message);\n      throw error;\n    }\n  },\n  // Reset wishlist (on logout)\n  resetWishlist: () => {\n    set({\n      wishlist: null,\n      loading: false\n    });\n  }\n}), {\n  name: 'wishlist-storage',\n  partialize: state => ({\n    wishlist: state.wishlist\n  })\n}));\nexport default useWishlistStore;","map":{"version":3,"names":["create","persist","wishlistService","toast","useWishlistStore","set","get","wishlist","loading","processing","fetchWishlist","response","getWishlist","console","log","data","error","_error$response","status","addToWishlist","productId","success","_error$response2","_error$response3","_error$response4","_error$response4$data","message","removeFromWishlist","toggleWishlist","items","isInWishlist","some","item","_item$product","itemProductId","product","_id","_item$product2","getWishlistCount","_wishlist$items","length","clearWishlist","moveToCart","_error$response5","_error$response5$data","resetWishlist","name","partialize","state"],"sources":["F:/projects/e-com/frontend/src/store/useWishlistStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport wishlistService from '../services/wishlist.service';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst useWishlistStore = create(\r\n  persist(\r\n    (set, get) => ({\r\n      wishlist: null,\r\n      loading: false,\r\n      processing: false, // Add processing state for toggle operations\r\n\r\n      // Fetch wishlist\r\n      fetchWishlist: async () => {\r\n        try {\r\n          set({ loading: true });\r\n          const response = await wishlistService.getWishlist();\r\n          console.log('Fetched wishlist from API:', response.data);\r\n          set({ wishlist: response.data, loading: false });\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Fetch wishlist error:', error);\r\n          set({ loading: false });\r\n          // Don't show error toast for unauthenticated users\r\n          if (error.response?.status !== 401) {\r\n            toast.error('Failed to load wishlist');\r\n          }\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Add to wishlist\r\n      addToWishlist: async (productId) => {\r\n        try {\r\n          console.log('Adding to wishlist, productId:', productId);\r\n          const response = await wishlistService.addToWishlist(productId);\r\n          console.log('Add to wishlist response:', response);\r\n          \r\n          // Update state immediately with the response data\r\n          set({ wishlist: response.data });\r\n          toast.success('Added to wishlist');\r\n          \r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Add to wishlist error:', error);\r\n          console.error('Error response:', error.response?.data);\r\n          console.error('Error status:', error.response?.status);\r\n          const message = error.response?.data?.message || 'Failed to add to wishlist';\r\n          toast.error(message);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Remove from wishlist\r\n      removeFromWishlist: async (productId) => {\r\n        try {\r\n          const response = await wishlistService.removeFromWishlist(productId);\r\n          set({ wishlist: response.data });\r\n          toast.success('Removed from wishlist');\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Remove from wishlist error:', error);\r\n          toast.error('Failed to remove from wishlist');\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Toggle wishlist (add or remove)\r\n      toggleWishlist: async (productId) => {\r\n        // Prevent multiple simultaneous toggles\r\n        const { processing } = get();\r\n        if (processing) {\r\n          console.log('Already processing, ignoring click');\r\n          return;\r\n        }\r\n\r\n        set({ processing: true });\r\n\r\n        try {\r\n          const { wishlist } = get();\r\n          \r\n          console.log('Toggle wishlist for product:', productId);\r\n          console.log('Current wishlist state:', wishlist);\r\n          \r\n          if (!wishlist || !wishlist.items) {\r\n            console.log('No wishlist, adding product');\r\n            await get().addToWishlist(productId);\r\n            return;\r\n          }\r\n          \r\n          const isInWishlist = wishlist.items.some(item => {\r\n            const itemProductId = typeof item.product === 'string' ? item.product : item.product?._id;\r\n            console.log('Comparing:', itemProductId, 'with', productId, '=', itemProductId === productId);\r\n            return itemProductId === productId;\r\n          });\r\n\r\n          console.log('Is in wishlist?', isInWishlist);\r\n\r\n          if (isInWishlist) {\r\n            console.log('Removing from wishlist');\r\n            await get().removeFromWishlist(productId);\r\n          } else {\r\n            console.log('Adding to wishlist');\r\n            await get().addToWishlist(productId);\r\n          }\r\n        } finally {\r\n          set({ processing: false });\r\n        }\r\n      },\r\n\r\n      // Check if product is in wishlist\r\n      isInWishlist: (productId) => {\r\n        const { wishlist } = get();\r\n        if (!wishlist || !wishlist.items) return false;\r\n        \r\n        return wishlist.items.some(item => {\r\n          // Handle both populated and non-populated product\r\n          if (typeof item.product === 'string') {\r\n            return item.product === productId;\r\n          }\r\n          return item.product?._id === productId;\r\n        });\r\n      },\r\n\r\n      // Get wishlist item count\r\n      getWishlistCount: () => {\r\n        const { wishlist } = get();\r\n        return wishlist?.items?.length || 0;\r\n      },\r\n\r\n      // Clear wishlist\r\n      clearWishlist: async () => {\r\n        try {\r\n          await wishlistService.clearWishlist();\r\n          set({ wishlist: { items: [] } });\r\n          toast.success('Wishlist cleared');\r\n        } catch (error) {\r\n          console.error('Clear wishlist error:', error);\r\n          toast.error('Failed to clear wishlist');\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Move to cart\r\n      moveToCart: async (productId) => {\r\n        try {\r\n          const response = await wishlistService.moveToCart(productId);\r\n          set({ wishlist: response.data.wishlist });\r\n          toast.success('Moved to cart');\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Move to cart error:', error);\r\n          const message = error.response?.data?.message || 'Failed to move to cart';\r\n          toast.error(message);\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      // Reset wishlist (on logout)\r\n      resetWishlist: () => {\r\n        set({ wishlist: null, loading: false });\r\n      }\r\n    }),\r\n    {\r\n      name: 'wishlist-storage',\r\n      partialize: (state) => ({ wishlist: state.wishlist })\r\n    }\r\n  )\r\n);\r\n\r\nexport default useWishlistStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}